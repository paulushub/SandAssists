<AddIn name        = "AddIn Manager and Explorer"
       author      = "Daniel Grunwald, Satguru P Srivastava"
       copyright   = "prj:///doc/copyright.txt"
       url         = "http://home.mchsi.com/~ssatguru"
       description = "Can install, enable, disable and uninstall AddIns"
       addInManagerHidden = "preinstalled">
	
	<Manifest>
		<Identity name = "ICSharpCode.AddInManager"/>
	</Manifest>
	
	<Runtime>
		<Import assembly = "ICSharpCode.AddInManager.dll">
			<ConditionEvaluator name="AddInManagerAddInState" class="ICSharpCode.AddInManager.AddInManagerAddInStateConditionEvaluator"/>
		</Import>
	</Runtime>

    <Path name = "/Workspace/Tools">
        <MenuItem id = "ShowAddInScout"
		          label = "Add-In Explorer"
     	          icon = "Icons.16x16.AddIns"
		          class = "AddInScout.AddInScoutCommand"/>
        
		<MenuItem id = "ShowAddInManager"
		          label = "${res:AddInManager.Title}..."
     	          icon = "Icons.16x16.AddIns"
		          class = "ICSharpCode.AddInManager.ShowCommand"/>
	</Path>
	
	<Path name = "/SharpDevelop/Workbench/DisplayBindings">
		<DisplayBinding id    = "AddInManager"
		                class = "ICSharpCode.AddInManager.AddInInstallBinding"
		                insertbefore    = "Text"
		                fileNamePattern = "\.sdaddin$"
		                title = "Install with AddIn manager"/>
	</Path>
	
	<Path name = "/AddIns/AddInManager/ContextMenu">
		<Condition name="AddInManagerAddInState" states="Enable" action="Disable">
			<MenuItem id="Disable"
			          label="${res:AddInManager.ActionDisable}"
                      loadclasslazy="false"
			          class="ICSharpCode.AddInManager.DisableCommand"/>
		</Condition>
		<Condition name="AddInManagerAddInState" states="Disable" action="Disable">
			<MenuItem id="Enable"
			          label="${res:AddInManager.ActionEnable}"
                      loadclasslazy="false"
			          class="ICSharpCode.AddInManager.EnableCommand"/>
		</Condition>
		<Condition name="AddInManagerAddInState" states="Enable,Disable,InstalledTwice,DependencyError">
			<MenuItem id="Uninstall"
			          label="${res:AddInManager.ActionUninstall}"
                      loadclasslazy="false"
			          class="ICSharpCode.AddInManager.UninstallCommand"/>
		</Condition>
		<Condition name="AddInManagerAddInState" states="Install">
			<MenuItem id="AbortInstall"
			          label="${res:AddInManager.ActionCancelInstallation}"
                      loadclasslazy="false"
			          class="ICSharpCode.AddInManager.AbortInstallCommand"/>
		</Condition>
		<Condition name="AddInManagerAddInState" states="Uninstall">
			<MenuItem id="AbortUninstall"
			          label="${res:AddInManager.ActionCancelDeinstallation}"
                      loadclasslazy="false"
			          class="ICSharpCode.AddInManager.AbortUninstallCommand"/>
		</Condition>
		<Condition name="AddInManagerAddInState" states="Update">
			<MenuItem id="AbortUpdate"
			          label="${res:AddInManager.ActionCancelUpdate}"
                      loadclasslazy="false"
			          class="ICSharpCode.AddInManager.AbortUpdateCommand"/>
		</Condition>
		<MenuItem id="Separator1" type="Separator"/>
		<MenuItem id="GoToHomepage"
		          label="${res:AddInManager.OpenWebsite}"
		          class="ICSharpCode.AddInManager.OpenHomepageCommand"
		          loadclasslazy="false"/>
		<MenuItem id="Options"
		          label="${res:AddInManager.Options}"
		          class="ICSharpCode.AddInManager.ShowOptionsCommand"
		          loadclasslazy="false"/>
		<MenuItem id="About"
                  type  = "CheckBox"
		          label="${res:AddInManager.About}"
		          class = "ICSharpCode.AddInManager.AboutCommand"/>
	</Path>

    <Path name = "/AddIns/AddInManager/Toolbar">
        <ToolbarItem id      = "InstallAddin"
		             icon    = "Icons.16x16.PlusBlue"
		             label   = "Install"
                     loadclasslazy="false"
		             tooltip = "Install Add-In"
		             class   = "ICSharpCode.AddInManager.InstallCommand"/>
        <ToolbarItem id      = "UnInstallAddin"
		             icon    = "Icons.16x16.MinusBlue"
                     label   = "Uninstall"
                     loadclasslazy="false"
		             tooltip = "Uninstall Add-In"
		             class   = "ICSharpCode.AddInManager.UninstallCommand"/>
        <ToolbarItem id = "InstallAddinSeparator" type = "Separator" />
        
        <ToolbarItem id      = "EnableAddin"
		             icon    = "Icons.16x16.OK"
                     label   = "Enable"
                     loadclasslazy="false"
		             tooltip = "Enable Add-In"
		             class   = "ICSharpCode.AddInManager.EnableCommand"/>
        <ToolbarItem id      = "DisableAddin"
		             icon    = "Icons.16x16.Clear"
                     label   = "Disable"
                     loadclasslazy="false"
		             tooltip = "Disable Add-In"
		             class   = "ICSharpCode.AddInManager.DisableCommand"/>
        <ToolbarItem id = "EnableDisableSeparator" type = "Separator" />
        
        <ToolbarItem id      = "UndoAddInAction"
		             icon    = "Icons.16x16.DeleteTool"
                     label   = "${res:Global.CancelButtonText}"
                     loadclasslazy="false"
		             tooltip = "${res:Global.CancelButtonText}"
		             class   = "ICSharpCode.AddInManager.UndoAddInAction"/>
        <ToolbarItem id = "UndoActionSeparator" type = "Separator" />
        
        <ToolbarItem id      = "AddinOpenWeb"
		             icon    = "Icons.16x16.WebSearchIcon"
                     label   = "Web"
                     loadclasslazy="false"
		             tooltip = "Open Website"
		             class   = "ICSharpCode.AddInManager.OpenHomepageCommand"/>
        <ToolbarItem id      = "AddinOptions"
		             icon    = "Icons.16x16.PropertiesIcon"
                     label   = "Options"
                     loadclasslazy="false"
		             tooltip = "Add-In Options"
		             class   = "ICSharpCode.AddInManager.ShowOptionsCommand"/>
        <ToolbarItem id      = "AddInAbout"
                     type    = "CheckBox"
		             icon    = "Icons.16x16.Question"
                     label   = "About"
                     loadclasslazy="false"
		             tooltip = "About Add-In"
		             class   = "ICSharpCode.AddInManager.AboutCommand"/>
    </Path>
</AddIn>
