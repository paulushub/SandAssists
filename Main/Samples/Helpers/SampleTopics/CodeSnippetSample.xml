<?xml version="1.0" encoding="utf-8" ?>
<codeSnippet xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="CodeSnippets.xsd">
    <item id="exampleId1#snippetId1">
        <sampleCode language="CSharp">
using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;

namespace HelloConsoleCS
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Hello, World");
        }
    }
}
        </sampleCode>
        <sampleCode language="VisualBasic">
Imports System
Imports System.Linq
Imports System.Text
Imports System.Collections.Generic

Module HelloConsoleVB

    Sub Main()
        Console.WriteLine("Hello, World")
    End Sub

End Module
        </sampleCode>
        <sampleCode language="ManagedCPlusPlus">
            <![CDATA[
#include "stdafx.h"

using namespace System;
using namespace System::Linq;
using namespace System::Text;
using namespace System::Collections::Generic;

int main(array<System::String ^> ^args)
{
    Console::WriteLine(L"Hello, World");
    return 0;
}            ]]>
        </sampleCode>
        <sampleCode language="JSharp">
package HelloWorldJS;

import System.*;

public class Program
{
    public static void main(String[] args)
    {
        Console.WriteLine("Hello, World");
    }
}             
        </sampleCode>
    </item>
    <item id="exampleId2#snippetId1">
        <sampleCode language="CSharp">
            public class SampleClass
            {            
            }
        </sampleCode>
        <sampleCode language="VisualBasic">
            Public Class SampleClass
            End Class
        </sampleCode>
    </item>
    <item id="exampleId2#snippetId2">
        <sampleCode language="CSharp">
            public interface ISampleInterace
            {            
            }
        </sampleCode>
        <sampleCode language="VisualBasic">
            Public Interface ISampleInterace
            End Interface
        </sampleCode>
    </item>
    <item id="exampleId3#snippetId3">
        <sampleCode language="CSharp">
            public struct SampleStruct
            {            
            }
        </sampleCode>
        <sampleCode language="VisualBasic">
            Public Structure SampleStruct
            End Structure
        </sampleCode>
    </item>
    <item id="exampleId4#snippetId1">
        <sampleCode language="CSharp">
            public interface ISampleInterace
            {            
            }
        </sampleCode>
        <sampleCode language="VisualBasic">
            Public Interface ISampleInterace
            End Interface
        </sampleCode>
    </item>
    <item id="exampleId4#snippetId2">
        <sampleCode language="CSharp">
            public class SampleClass
            {            
            }
        </sampleCode>
        <sampleCode language="VisualBasic">
            Public Class SampleClass
            End Class
        </sampleCode>
    </item>
    <item id="exampleId4#snippetId3">
        <sampleCode language="CSharp">
using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;

namespace HelloConsoleCS
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Hello, World");
        }
    }
}
        </sampleCode>
        <sampleCode language="VisualBasic">
Imports System
Imports System.Linq
Imports System.Text
Imports System.Collections.Generic

Module HelloConsoleVB

    Sub Main()
        Console.WriteLine("Hello, World")
    End Sub

End Module
        </sampleCode>
        <sampleCode language="ManagedCPlusPlus">
            <![CDATA[
#include "stdafx.h"

using namespace System;
using namespace System::Linq;
using namespace System::Text;
using namespace System::Collections::Generic;

int main(array<System::String ^> ^args)
{
    Console::WriteLine(L"Hello, World");
    return 0;
}            ]]>
        </sampleCode>
    </item>
</codeSnippet>
